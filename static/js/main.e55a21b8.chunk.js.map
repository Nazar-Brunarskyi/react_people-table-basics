{"version":3,"sources":["Navbar.helpers.ts","components/Navbar/Navbar.tsx","App.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/Person/Person.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["makeActive","objectWithProperties","isActive","classNames","findParent","name","people","i","length","Navbar","className","role","to","App","NotFoundPage","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","isWoman","cn","PersonComponent","slag","useParams","born","died","motherName","mother","fatherName","father","PeopleTable","map","PeoplePage","useState","setPeople","isLoading","setIsloading","hasError","setHesError","isPeopleLoaded","setIsPeopleLoaded","useEffect","peopleFromServer","peopleWithParents","catch","finally","isPeopleEmpty","shouldPeopleBeRendered","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.e55a21b8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Person } from './types';\n\ninterface NavLinkObj {\n  isActive: boolean,\n}\n\nexport function makeActive(objectWithProperties: NavLinkObj) {\n  const { isActive } = objectWithProperties;\n\n  return classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n}\n\nexport function findParent(\n  name: string | null,\n  people: Person[],\n): Person | null {\n  if (!name) {\n    return null;\n  }\n\n  for (let i = 0; i < people.length; i += 1) {\n    const personName = people[i].name;\n\n    if (personName === name) {\n      return people[i];\n    }\n  }\n\n  return null;\n}\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeActive } from '../../Navbar.helpers';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={makeActive}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={makeActive}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Outlet,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person?: Person | null,\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  let name = '-';\n  let slug = '';\n  let sex = '';\n\n  if (person) {\n    [name, slug, sex] = [person.name, person.slug, person.sex];\n  }\n\n  const isWoman = sex === 'f';\n\n  return (\n    <Link className={cn({ 'has-text-danger': isWoman })} to={`/people/${slug}`}>\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonComponent: FC<Props> = ({ person }) => {\n  const { slag } = useParams();\n\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    mother,\n    fatherName,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slag === person.slug })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {\n          mother\n            ? <PersonLink person={mother} />\n            : motherName || '-'\n        }\n      </td>\n      <td>\n        {\n          father\n            ? <PersonLink person={father} />\n            : fatherName || '-'\n        }\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonComponent } from '../Person/Person';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          people.map(person => (\n            <PersonComponent key={person.slug} person={person} />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { findParent } from '../../Navbar.helpers';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [hasError, setHesError] = useState(false);\n  const [isPeopleLoaded, setIsPeopleLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsloading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        const peopleWithParents: Person[] = peopleFromServer.map(person => ({\n          ...person,\n          mother: findParent(person.motherName, peopleFromServer),\n          father: findParent(person.fatherName, peopleFromServer),\n        }));\n\n        setPeople(peopleWithParents);\n        setIsPeopleLoaded(true);\n      })\n      .catch(() => setHesError(true))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  const isPeopleEmpty = people.length === 0 && isPeopleLoaded;\n  const shouldPeopleBeRendered = !hasError && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isPeopleEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {shouldPeopleBeRendered && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route index element={<HomePage />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n\n            <Route path=\":slag\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}